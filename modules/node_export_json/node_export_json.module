<?php

/**
 * @file
 * The Node export JSON module.
 *
 * Adds JSON format to Node export.
 */

/**
 * Implements hook_node_export_format_handlers().
 */
function node_export_json_node_export_format_handlers() {
  return array(
    'json' => array(
      '#title' => t('JSON'),
      '#module' => 'node_export_json',
      '#description' => t(
        '<a href="!json">JavaScript Object Notation</a> code.',
        array(
          '!json' => 'http://en.wikipedia.org/wiki/JSON'
        )
      ),
    ),
  );
}

/**
 * Implements hook_node_export().
 */
function node_export_json_node_export($nodes, $format) {
  return drupal_json_encode(node_export_json_encode_objects($nodes));
}

/**
 * Implements hook_node_export_import().
 */
function node_export_json_node_export_import($code_string) {
  return node_export_json_decode_objects(drupal_json_decode($code_string));
}

/**
 * Mark objects as being objects.
 */
function node_export_json_encode_objects($var) {
  if (is_object($var)) {
    $var = (array)$var;
    $var['#node_export_object'] = '1';
  }
  if (is_array($var)) {
    foreach ($var as $key => $value) {
      $var[$key] = node_export_json_encode_objects($value);
    }
  }
  return $var;
}

/**
 * Recursively convert arrays back to objects.
 */
function node_export_json_decode_objects($array) {
  foreach ($array as $k => $v) {
    if (is_array($v)) {
      $array[$k] = node_export_json_decode_objects($v);
    }
  }
  if (isset($array['#node_export_object'])) {
    unset($array['#node_export_object']);
    $array = (object)$array;
  }
  return $array;
}